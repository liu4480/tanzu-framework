---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: test-cluster-5
  namespace: default
spec:
  infrastructureRef:
    kind: VSphereCluster
  clusterNetwork:
    pods:
      cidrBlocks: [ "192.168.0.0/16","fd00:100:96::/48" ]
    services:
      cidrBlocks: [ "192.168.0.0/16","fd00:100:96::/48" ]
  topology:
    class: test-clusterclass-tcbt
    version: v1.22.2
---
apiVersion: vmware.infrastructure.cluster.x-k8s.io/v1beta1
kind: VSphereCluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: test-cluster-5
    topology.cluster.x-k8s.io/owned: ""
  name: test-cluster-5-6gvvc
  namespace: default
spec:
  controlPlaneEndpoint:
    host: 192.168.123.3
    port: 6443
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: featuregates.core.tanzu.vmware.com
spec:
  group: core.tanzu.vmware.com
  names:
    kind: FeatureGate
    listKind: FeatureGateList
    plural: featuregates
    singular: featuregate
  scope: Cluster
  versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: FeatureGate is the Schema for the featuregates API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the specification for gating features.
              properties:
                features:
                  description: Features is a slice of FeatureReference to gate features.
                    Feature controller sets the specified activation state only if the
                    Feature policy is satisfied.
                  items:
                    description: FeatureReference refers to a Feature resource and specifies
                      its intended activation state.
                    properties:
                      activate:
                        description: Activate indicates the activation intent for the
                          feature.
                        type: boolean
                      name:
                        description: Name is the name of the Feature resource, which
                          represents a feature the system offers.
                        type: string
                      permanentlyVoidAllSupportGuarantees:
                        description: PermanentlyVoidAllSupportGuarantees when set to
                          true permanently voids all support guarantees. Once set to
                          true, cannot be set back to false
                        type: boolean
                    required:
                      - name
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - name
                  x-kubernetes-list-type: map
              type: object
            status:
              description: Status reports activation state and availability of features
                in the system.
              properties:
                featureReferenceResults:
                  description: FeatureReferenceResult represents the results of all
                    the features specified in the FeatureGate spec.
                  items:
                    description: FeatureReferenceResult represents the result of FeatureReference.
                    properties:
                      message:
                        description: Message represents the reason for status
                        type: string
                      name:
                        description: Name is the name of the feature.
                        minLength: 1
                        type: string
                      status:
                        description: 'Status represents the outcome of the feature reference
                        operation specified in the FeatureGate spec - Applied: represents
                        feature toggle has been successfully applied. - Invalid: represents
                        that the intended state of the feature is invalid.'
                        enum:
                          - Applied
                          - Invalid
                        type: string
                    required:
                      - name
                      - status
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - name
                  x-kubernetes-list-type: map
              required:
                - featureReferenceResults
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: features.core.tanzu.vmware.com
spec:
  group: core.tanzu.vmware.com
  names:
    kind: Feature
    listKind: FeatureList
    plural: features
    singular: feature
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.description
          name: Description
          type: string
        - jsonPath: .spec.stability
          name: Stability
          type: string
        - jsonPath: .status.activated
          name: Activated?
          type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: Feature is the Schema for the features API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: FeatureSpec defines the desired state of Feature
              properties:
                description:
                  description: Description of the feature.
                  type: string
                stability:
                  description: 'Stability indicates stability level of the feature.
                  Stability levels are Work In Progress, Experimental, Technical Preview,
                  Stable and Deprecated. - Work In Progress: Feature is still under
                  development. It is not ready to be used, except by the team working
                  on it. Activating this feature is not recommended under any circumstances.
                  - Experimental: Feature is not ready, but may be used in pre-production
                  environments. However, if an experimental feature has ever been
                  used in an environment, that environment will not be supported.
                  Activating an experimental feature requires you to permanently,
                  irrevocably void all support guarantees for this environment by
                  setting permanentlyVoidAllSupportGuarantees in feature reference
                  in featuregate spec to true. You will need to recreate the environment
                  to return to a supported state. - Technical Preview: Feature is
                  not ready, but is not believed to be dangerous. The feature itself
                  is unsupported, but activating a technical preview feature does
                  not affect the support status of the environment. - Stable: Feature
                  is ready and fully supported - Deprecated: Feature is destined for
                  removal, usage is discouraged. Deactivate this feature prior to
                  upgrading to a release which has removed it to validate that you
                  are not still using it and to prevent users from introducing new
                  usage of it.'
                  enum:
                    - Work In Progress
                    - Experimental
                    - Technical Preview
                    - Stable
                    - Deprecated
                  type: string
              required:
                - description
                - stability
              type: object
            status:
              description: FeatureStatus defines the observed state of Feature
              properties:
                activated:
                  description: Activated is a boolean which indicates whether a feature
                    is activated or not.
                  type: boolean
              required:
                - activated
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: core.tanzu.vmware.com/v1alpha2
kind: Feature
metadata:
  name: antreansx
spec:
  description: Feature to enable antreansx
  stability: alpha
---
apiVersion: core.tanzu.vmware.com/v1alpha2
kind: FeatureGate
metadata:
  name: system
spec:
  features:
    - activate: true
      name: vmware-system-tkg-antreansx
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: DockerCluster
metadata:
  name: test-cluster-5
---
apiVersion: cni.tanzu.vmware.com/v1alpha2
kind: AntreaConfig
metadata:
  name: test-cluster-5-antrea-package
  namespace: default
  labels:
    tkg.tanzu.vmware.com/package-name: antrea.tanzu.vmware.com.1.7.2---tkg.1-advanced
  ownerReferences:
    - apiVersion: cluster.x-k8s.io/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Cluster
      name: test-cluster-5
      uid: cbd29b10-c190-422e-86f1-a0321d1aab7d
spec:
  antrea:
    config:
      egress:
        exceptCIDRs: []
      nodePortLocal:
        enabled: true
        portRange: 61000-62000
      antreaProxy:
        proxyAll: false
        nodePortAddresses: []
        skipServices: []
        proxyLoadBalancerIPs: false
      flowExporter:
        collectorAddress: "flow-aggregator.flow-aggregator.svc:4739:tls"
        pollInterval: "5s"
        activeFlowTimeout: "30s"
        idleFlowTimeout: "15s"
      kubeAPIServerOverride: null
      transportInterface: null
      transportInterfaceCIDRs: []
      multicastInterfaces: []
      tunnelType: geneve
      trafficEncryptionMode: none
      wireGuard:
        port: 51820
      serviceCIDR: 10.96.0.0/12
      serviceCIDRv6: null
      enableUsageReporting: false
      trafficEncapMode: encap
      noSNAT: false
      disableUdpTunnelOffload: false
      defaultMTU: ""
      tlsCipherSuites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384
      featureGates:
        AntreaProxy: true
        EndpointSlice: false
        AntreaPolicy: true
        FlowExporter: false
        Egress: false
        NodePortLocal: true
        AntreaTraceflow: false
        NetworkPolicyStats: false
        AntreaIPAM: false
        ServiceExternalIP: false
        Multicast: false
  antreaNsx:
    enable: true
---